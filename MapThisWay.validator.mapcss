meta
{
  title: "MapThisWay";
  version: "0.92";
  description: "Map This Way";
  author: "Francesco Ansanelli";
  watch-modified: true;
}

/* mtw missingdispensing */

*[amenity=pharmacy][!dispensing] {
	throwWarning: tr("{0} without {1}", "{0.value}", "{1.key}");
	group: "MapThisWay";
}

/* mtw missingoven */

*[cuisine=~/pizza/][!oven] {
	throwWarning: tr("{0} without {1}", "{0.value}", "{1.key}");
	group: "MapThisWay";
}

/* mtw unknownoven */

*[oven][oven !~ /^(electric|wood_fired|gas_fired)$/] {
	throwWarning: tr("unusual value of {0}", "{0.key}");
	group: "MapThisWay";
}

/* mtw restaurantkebab */

*[amenity!=fast_food][cuisine=~/kebab/] {
	throwWarning: tr("{0} without {1}", "{1.value}", "{0.value}");
	group: "MapThisWay";
}

/* mtw addressonbuilding */

way[building][addr:street] {
	throwWarning: tr("{0} with {1}", "{0.key}", "{1.key}");
	group: "MapThisWay";
}

/* mtw addressonbuilding */

way[building][addr:housenumber] {
	throwWarning: tr("{0} with {1}", "{0.key}", "{1.key}");
	group: "MapThisWay";
}

/* mtw buildingnoroof */

way[building][roof:levels=0] {
	throwWarning: tr("{0} with {1} {2}", "{0.key}", "{1.key}", "{1.value}");
	group: "MapThisWay";
}

/* mtw namenotcapitalized */

*[addr:street =~ /^[a-z]/],
*[name =~ /^[a-z]/] {
	throwWarning: tr("{0} not capitalized", "{0.key}");
	group: "MapThisWay";
}

/* mtw missingauthorization */

*[shop=tobacco][!authorization] {
	throwWarning: tr("{0} without {1}", "{0.value}", "{1.key}");
	group: "MapThisWay";
}

/* mtw wrongbuildingtype TOO MANY ERRORS

*[office][office!=government] ∈
*[building][building!~/^(apartments|commercial|office|industrial|retail|supermarket|warehouse|kiosk)$/]{
	throwWarning: tr("office inside wrong building type");
	group: "MapThisWay";
}
*/
/* mtw wrongbuildingtype */

*[office=government] ∈
*[building][building!=government]{
	throwWarning: tr("office inside wrong building type");
	group: "MapThisWay";
}

/* mtw wrongbuildingtype TOO MANY ERRORS

*[shop] ∈
*[building][building!~/^(apartments|commercial|office|industrial|retail|supermarket|warehouse|kiosk)$/] {
	throwWarning: tr("shop inside wrong building type");
	group: "MapThisWay";
}
 */

/* mtw amenitywithname */

*[amenity=~/^(drinking_water|bbq|charging_station|grit_bin|parking_entrance|ticket_validator|atm|bureau_de_change|baking_oven|bench|clock|photo_booth|post_box|table|telephone|vending_machine|waste_basket|waste_disposal|watering_place|water_point)$/][name] {
	throwWarning: tr("{0} with {1}", "{0.key}", "{1.key}");
	group: "MapThisWay";
}

/* mtw nodewithbuilding */

node[building] {
	throwWarning: tr("node with {0}", "{0.key}");
	group: "MapThisWay";
}

/* mtw unusualvending SEE JOSM TICKET
*[amenity=vending_machine][vending!~/(admission_tickets|animal_feed|art|bicycle_tube|books|bottle_return|bread|candles|chemist|chewing_gums|cigarettes|coffee|condoms|drinks|electronics|elongated_coin|excrement_bags|feminine_hygiene|first_aid|fishing_bait|fishing_tackle|flowers|food|fuel|ice_cream|ice_cubes|ink_cartridges|laundry_detergent|lottery|milk|newspapers|parcel_mail_in|parcel_pickup|parking_tickets|public_transport_plans|public_transport_tickets|sex_toys|SIM_cards|stamps|sweets|syringes|telephone_vouchers|toll|toys|umbrellas|water)(?:$|[;](?R))/] {
	throwWarning: tr("unusual value of {0}", "{0.value}");
	group: "MapThisWay";
}
*/

/* mtw citylimitwithoutdirection */

node[traffic_sign=city_limit][!direction] {
	throwWarning: tr("{0} without {1}", "{0.key}", "{1.key}");
	group: "MapThisWay";
}

/* mtw numerocivicoerrato */

*[addr:housenumber][addr:housenumber !~ /^[0-9]+[a-z]*$/] {
	throwWarning: tr("Numero Civico");
	group: "MapThisWay";
}

/* mtw roundaboutwithname */

way[junction=roundabout][name] {
	throwWarning: tr("Roundabout with name");
	group: "MapThisWay";
}

/* mtw wifiyes */

*[wifi=yes] {
	throwWarning: tr("{0} is deprecated", "{0.tag}");
	suggestAlternative: "internet_access=wlan";
	group: "MapThisWay";
	fixRemove: "wifi";
        fixAdd: "internet_access=wlan";
}

/* mtw wifino */

*[wifi=no] {
	throwWarning: tr("{0} is deprecated", "{0.tag}");
	suggestAlternative: "internet_access";
	group: "MapThisWay";
	fixChangeKey: "wifi => internet_access";
}

/* mtw wififree */

*[wifi=free] {
	throwWarning: tr("{0} is deprecated", "{0.tag}");
	suggestAlternative: "internet_access=wlan";
	group: "MapThisWay";
	fixRemove: "wifi";
        fixAdd: "internet_access=wlan";
        fixAdd: "internet_access:fee=no";
}

/* mtw officetravelagent */

*[office=travel_agent] {
	throwWarning: tr("{0} is deprecated", "{0.tag}");
	suggestAlternative: "shop=travel_agency";
	group: "MapThisWay";
	fixRemove: "office";
        fixAdd: "shop=travel_agency";
}

/* mtw cyclewaycrossingasnode SEE JOSM TICKET
node[cycleway=crossing] {
	throwWarning: tr("wrong crossing tag on a node");
	suggestAlternative: "highway=crossing";
	group: "MapThisWay";
	fixChangeKey: "cycleway => highway";
        fixAdd: "bicycle=yes";
}
*/

/* mtw refwithspace - suggested by Andrea Musuruane */

*[ref =~ /\s+/] {
	throwWarning: tr("ref with spaces");
	group: "MapThisWay";
}


/* mtw landusewithname - suggested by Andrea Musuruane */

way[landuse][name] {
	throwWarning: tr("{0} with {1}", "{0.key}", "{1.key}");
	group: "MapThisWay";
}

/* mtw landusewithname - suggested by Andrea Musuruane */

way[landuse][name] {
	throwWarning: tr("{0} with {1}", "{0.key}", "{1.key}");
	group: "MapThisWay";
}

/* mtw landusewithname - suggested by Andrea Musuruane */

way[landuse][name] {
	throwWarning: tr("{0} with {1}", "{0.key}", "{1.key}");
	group: "MapThisWay";
}

/* mtw onlychristian - suggested by Andrea Musuruane */

*[amenity=place_of_worship][religion=christian][!denomination] {
	throwWarning: tr("{0} without {1}", "{0.value}", "{2.key}");
	group: "MapThisWay";
}

