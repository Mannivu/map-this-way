meta
{
  title: "MapThisWay";
  version: "0.98";
  description: "Map This Way";
  author: "Francesco Ansanelli";
  watch-modified: true;
}

/* mtw missingdispensing */

*[amenity=pharmacy][!dispensing][inside("IT")] {
	throwWarning: tr("{0} without {1}", "{0.value}", "{1.key}");
	group: "MapThisWay";
}

/* mtw missingoven */

*[cuisine ~= "pizza"][!oven][inside("IT")] {
	throwWarning: tr("{0} without {1}", "{0.value}", "{1.key}");
	group: "MapThisWay";
}

/* mtw unknownoven */

*[oven][oven !~ /^(electric|wood_fired|gas_fired)$/] {
	throwWarning: tr("unusual value of {0}", "{0.key}");
	group: "MapThisWay";
}

/* mtw restaurantkebab */

*[amenity!=fast_food][cuisine ~= "kebab"][inside("IT")] {
	throwWarning: tr("{0} without {1}", "{1.value}", "{0.value}");
	group: "MapThisWay";
}

/* mtw addressonbuilding */

way[building][tag_regex("^addr:*")][inside("IT")] {
	throwWarning: tr("building with addr:*");
	group: "MapThisWay";
}

/* mtw buildingnoroof */

way[building][roof:levels=0] {
	throwWarning: tr("{0} with {1} {2}", "{0.key}", "{1.key}", "{1.value}");
	group: "MapThisWay";
}

/* mtw namenotcapitalized */

*[addr:street =~ /^[a-z]/],
*[name =~ /^[a-z]/] {
	throwWarning: tr("{0} not capitalized", "{0.key}");
	group: "MapThisWay";
}

/* mtw missingauthorization */

*[shop=tobacco][!authorization][inside("IT")] {
	throwWarning: tr("{0} without {1}", "{0.value}", "{1.key}");
	group: "MapThisWay";
}

/* mtw wrongbuildingtype TOO MANY ERRORS

*[office][office!=government] ∈
*[building][building!~/^(apartments|commercial|office|industrial|retail|supermarket|warehouse|kiosk)$/]{
	throwWarning: tr("office inside wrong building type");
	group: "MapThisWay";
}
*/
/* mtw wrongbuildingtype */

*[office=government] ∈
*[building][building!=government]{
	throwWarning: tr("office inside wrong building type");
	group: "MapThisWay";
}

/* mtw wrongbuildingtype TOO MANY ERRORS

*[shop] ∈
*[building][building!~/^(apartments|commercial|office|industrial|retail|supermarket|warehouse|kiosk)$/] {
	throwWarning: tr("shop inside wrong building type");
	group: "MapThisWay";
}
 */

/* mtw amenitywithname */

*[amenity=~/^(drinking_water|bbq|charging_station|grit_bin|parking_entrance|ticket_validator|atm|bureau_de_change|baking_oven|bench|clock|photo_booth|post_box|table|telephone|vending_machine|waste_basket|waste_disposal|watering_place|water_point)$/][name] {
	throwWarning: tr("{0} with {1}", "{0.key}", "{1.key}");
	group: "MapThisWay";
}

/* mtw nodewithbuilding */

node[building] {
	throwWarning: tr("node with {0}", "{0.key}");
	group: "MapThisWay";
}

/* mtw citylimitwithoutdirection */

node[traffic_sign=city_limit][!direction] {
	throwWarning: tr("{0} without {1}", "{0.key}", "{1.key}");
	group: "MapThisWay";
}

/* mtw numerocivicoerrato */
*[addr:housenumber][addr:housenumber !~ /^(0|[1-9][0-9]*)([a-z]{0,1}|(\/[1-9][0-9]*[a-z]{0,1})|bis|((qua)?ter))(\b rosso\b)?$/][inside("IT")] {
	throwWarning: tr("Numero Civico");
	group: "MapThisWay";
	assertMatch: "00";
	assertMatch: "01";
	assertMatch: "a";
	assertMatch: "1A";
	assertMatch: "1 a";
	assertMatch: "1/BIS";
	assertMatch: "0/0";
	assertMatch: "1 nero";
	assertNoMatch: "1";
	assertNoMatch: "1a";
	assertNoMatch: "1bis";
	assertNoMatch: "1ter";
	assertNoMatch: "1quater";
	assertNoMatch: "1/1";
	assertNoMatch: "95/1a";
	assertNoMatch: "1 rosso";
	assertNoMatch: "0";
	assertNoMatch: "0a";
}

/* ENABLE AFTER MY PATCH GET MERGED:
 * https://josm.openstreetmap.de/ticket/18166
 *
*["addr:housenumber"][replace(tag("addr:housenumber"),",",";") != join_list(";",filter("^(0|[1-9][0-9]*)([a-z]{0,1}|(\\/[1-9][0-9]*[a-z]{0,1})|bis|((qua)?ter))(\\b rosso\\b)?$",split(";",replace(tag("addr:housenumber"),",",";"))))][inside("IT")] {
	throwWarning: tr("Numero Civico");
	group: "MapThisWay";
	assertMatch: "00";
	assertMatch: "01";
	assertMatch: "a";
	assertMatch: "1A";
	assertMatch: "1 a";
	assertMatch: "1/BIS";
	assertMatch: "0/0";
	assertMatch: "1 nero";
	assertNoMatch: "1";
	assertNoMatch: "1a";
	assertNoMatch: "1bis";
	assertNoMatch: "1ter";
	assertNoMatch: "1quater";
	assertNoMatch: "1/1";
	assertNoMatch: "95/1a";
	assertNoMatch: "1 rosso";
	assertNoMatch: "0";
	assertNoMatch: "0a";
	assertNoMatch: "1;3";
	assertNoMatch: "1,3";
}*/

/* mtw unusualvending
 * https://josm.openstreetmap.de/ticket/17751
 *
*[amenity=vending_machine][vending][tag("vending") != join_list(";",filter("^(admission_tickets|animal_feed|art|bicycle_tube|books|bottle_return|bread|candles|chemist|chewing_gums|cigarettes|coffee|condoms|drinks|electronics|elongated_coin|excrement_bags|feminine_hygiene|first_aid|fishing_bait|fishing_tackle|flowers|food|fuel|ice_cream|ice_cubes|ink_cartridges|laundry_detergent|lottery|milk|newspapers|parcel_mail_in|parcel_pickup|parking_tickets|public_transport_plans|public_transport_tickets|sex_toys|SIM_cards|stamps|sweets|syringes|telephone_vouchers|toll|toys|umbrellas|water)$",split(";",tag("vending"))))] {
	throwWarning: tr("unusual value of {0}", "{1.key}");
	group: "MapThisWay";
}*/

/* mtw roundaboutwithname */

way[junction=roundabout][name] {
	throwWarning: tr("Roundabout with name");
	group: "MapThisWay";
}

/* mtw wifiyes */

*[wifi=yes] {
	throwWarning: tr("{0} is deprecated", "{0.tag}");
	suggestAlternative: "internet_access=wlan";
	group: "MapThisWay";
	fixRemove: "wifi";
        fixAdd: "internet_access=wlan";
}

/* mtw wifino */

*[wifi=no] {
	throwWarning: tr("{0} is deprecated", "{0.tag}");
	suggestAlternative: "internet_access";
	group: "MapThisWay";
	fixChangeKey: "wifi => internet_access";
}

/* mtw wififree */

*[wifi=free] {
	throwWarning: tr("{0} is deprecated", "{0.tag}");
	suggestAlternative: "internet_access=wlan";
	group: "MapThisWay";
	fixRemove: "wifi";
        fixAdd: "internet_access=wlan";
        fixAdd: "internet_access:fee=no";
}

/* mtw officetravelagent */

*[office=travel_agent] {
	throwWarning: tr("{0} is deprecated", "{0.tag}");
	suggestAlternative: "shop=travel_agency";
	group: "MapThisWay";
	fixRemove: "office";
        fixAdd: "shop=travel_agency";
}

/* mtw refwithspace - suggested by Andrea Musuruane */

*[ref =~ /\s+/] {
	throwWarning: tr("ref with spaces");
	group: "MapThisWay";
}


/* mtw landusewithname - suggested by Andrea Musuruane
SHOULD BE INVESTIGATED MORE BEFORE ENABILING...
way[landuse][name] {
	throwWarning: tr("{0} with {1}", "{0.key}", "{1.key}");
	group: "MapThisWay";
}
*/

/* mtw onlychristian - suggested by Andrea Musuruane */

*[amenity=place_of_worship][religion=christian][!denomination] {
	throwWarning: tr("{0} without {1}", "{0.value}", "{2.key}");
	group: "MapThisWay";
}

/* mtw trafficsingunconnected - suggested by Andrea Musuruane */

node:unconnected[traffic_sign][traffic_sign=city_limit] {
	throwWarning: tr("{0}", "{2.tag}");
	group: "MapThisWay";
}

/* mtw facebookaswebsite */

*[website =~ /facebook/] {
	throwWarning: tr("{0}", "{0.tag}");
	group: "MapThisWay";
}

/* mtw invalidphone */

*["contact:phone:IT"]["contact:phone:IT" !~ /^\+39[- ][08][0-9]+[- ][0-9]+$/],
*["contact:phone"]["contact:phone" !~ /^\+39[- ][08][0-9]+[- ][0-9]+$/][inside("IT")],
*["phone:IT"]["phone:IT" !~ /^\+39[- ][08][0-9]+[- ][0-9]+$/],
*[phone][phone !~ /^\+39[- ][08][0-9]+[- ][0-9]+$/][inside("IT")] {
	throwWarning: tr("{0}", "{0.key}");
	group: "MapThisWay";
}

/* mtw invalidmobilephone */

*["contact:mobile:IT"]["contact:mobile:IT" !~ /^\+39[- ]3[0-9]{2}[- ][0-9]{6,7}$/],
*["contact:mobile"]["contact:mobile" !~ /^\+39[- ]3[0-9]{2}[- ][0-9]{6,7}$/][inside("IT")],
*["phone:mobile:IT"]["phone:mobile:IT" !~ /^\+39[- ]3[0-9]{2}[- ][0-9]{6,7}$/],
*["phone:mobile"]["phone:mobile" !~ /^\+39[- ]3[0-9]{2}[- ][0-9]{6,7}$/][inside("IT")] {
	throwWarning: tr("{0}", "{0.key}");
	group: "MapThisWay";
}

/* mtw busonwrongelement */
node[public_transport != "stop_position"][bus="yes"] {
	throwWarning: tr("{0} on suspicious object", "{1.tag}");
	group: "MapThisWay";
	fixRemove: "bus";
}

/* mtw shoplamps */

*[shop=lamps] {
	throwWarning: tr("{0} is deprecated", "{0.tag}");
	suggestAlternative: "shop=lighting";
	group: "MapThisWay";
	fixRemove: "shop";
        fixAdd: "shop=lighting";
}

/* mtw naturaltreenotmonumental - suggested by canfe */

node[natural=tree][!tag_regex("^(name|genus|species)")] {
	throwWarning: tr("{0} without name, genus or species", "{0.tag}");
	group: "MapThisWay";
}

/* mtw invaliddug - suggested by canfe */

way[highway][highway != "cycleway"][highway != "path"][name][name !~ /^(?i)(arco|autostrada|belvedere|calata|calle|cavalcavia|circonvallazione|corso|corte|cortile|discesa|galleria|gradinata|larghetto|largo|litoranea|lungargine|lungo[a-z]+|molo|parcheggio|passaggio|passeggiata|percorso ciclabile|percorso ciclopedonale|percorso pedonale|piazza|piazzale|piazzetta|pista ciclabile|ponte|raccordo|rampa|ronco|rotatoria|rotonda|salita|scalinata|scesa|sentiero|slargo|sottopasso|sovrappasso|spiazzo|strada|strada antica|strada comunale|strada consortile|strada nuova|strada panoramica|strada poderale|strada privata|strada provinciale|strada regionale|strada statale|strada vecchia|strada vicinale|stradella|stradello|stradone|tangenziale|traversa|traversa privata|via|viadotto|via antica|via comunale|via nazionale|via nuova|via panoramica|via privata|via provinciale|via vecchia|viale|vialetto|vico|vico chiuso|vico cieco|vico privato|vicoletto|vicolo|vicolo chiuso|vicolo cieco|vicolo privato|viottolo)[ ]/][inside("IT")] {
	throwWarning: tr("unusual value of {0}", "{1.key}");
	group: "MapThisWay";
}

